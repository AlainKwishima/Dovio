openapi: 3.1.0
info:
  title: Mobile API
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id: { type: string }
        fullNames: { type: string }
        email: { type: string }
        profilePictureURL: { type: [string, 'null'] }
    Post:
      type: object
      properties:
        id: { type: string }
        text: { type: string }
        images: { type: array, items: { type: string } }
        createdAt: { type: string, format: date-time }
        author: { $ref: '#/components/schemas/User' }
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
  /auth/register:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [fullNames, email, password]
              properties:
                fullNames: { type: string }
                email: { type: string, format: email }
                password: { type: string, minLength: 6 }
      responses: { '200': { description: OK } }
  /auth/login:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string }
                password: { type: string }
      responses: { '200': { description: OK } }
  /auth/refresh-token:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken: { type: string }
      responses: { '200': { description: OK } }
  /posts:
    get:
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      responses: { '200': { description: OK } }
    post:
      security: [ { bearerAuth: [] } ]
      responses: { '201': { description: Created } }
  /messages/conversations:
    get:
      security: [ { bearerAuth: [] } ]
      responses: { '200': { description: OK } }
  /messages:
    get:
      security: [ { bearerAuth: [] } ]
      responses: { '200': { description: OK } }
    post:
      security: [ { bearerAuth: [] } ]
      responses: { '201': { description: Created } }

